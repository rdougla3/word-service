//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WordServiceGui.WordService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WordService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        string WordFilter(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        System.Threading.Tasks.Task<string> WordFilterAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        string[] Top10Words(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Hypernym", ReplyAction="http://tempuri.org/IService1/HypernymResponse")]
        string Hypernym(string word1, string word2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Hypernym", ReplyAction="http://tempuri.org/IService1/HypernymResponse")]
        System.Threading.Tasks.Task<string> HypernymAsync(string word1, string word2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Distance", ReplyAction="http://tempuri.org/IService1/DistanceResponse")]
        int Distance(string word1, string word2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Distance", ReplyAction="http://tempuri.org/IService1/DistanceResponse")]
        System.Threading.Tasks.Task<int> DistanceAsync(string word1, string word2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WordServiceGui.WordService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WordServiceGui.WordService.IService1>, WordServiceGui.WordService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string WordFilter(string str) {
            return base.Channel.WordFilter(str);
        }
        
        public System.Threading.Tasks.Task<string> WordFilterAsync(string str) {
            return base.Channel.WordFilterAsync(str);
        }
        
        public string[] Top10Words(string url) {
            return base.Channel.Top10Words(url);
        }
        
        public System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url) {
            return base.Channel.Top10WordsAsync(url);
        }
        
        public string Hypernym(string word1, string word2) {
            return base.Channel.Hypernym(word1, word2);
        }
        
        public System.Threading.Tasks.Task<string> HypernymAsync(string word1, string word2) {
            return base.Channel.HypernymAsync(word1, word2);
        }
        
        public int Distance(string word1, string word2) {
            return base.Channel.Distance(word1, word2);
        }
        
        public System.Threading.Tasks.Task<int> DistanceAsync(string word1, string word2) {
            return base.Channel.DistanceAsync(word1, word2);
        }
    }
}
